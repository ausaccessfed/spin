---
- name: 'Create writable directories'
  file:
    name: '{{ item }}'
    state: directory
    owner: spin
    group: spin
    mode: 0700
  with_items:
    - /opt/spin/app/tmp
    - /var/log/spin/application

- name: 'Create assets directory'
  file:
    name: /opt/spin/app/public/assets
    state: directory
    owner: spin
    group: apache
    mode: 0750

- name: 'Create socket directory'
  file:
    name: /opt/spin/sockets
    state: directory
    owner: spin
    group: apache
    mode: 0750

- name: 'Symlink log directory'
  file:
    name: /opt/spin/app/log
    src: /var/log/spin/application
    owner: root
    group: root
    state: link

- name: 'Install gem dependencies'
  command: >
    /opt/spin/rbenv/bin/rbenv exec bundle install --deployment --without development test
    chdir=/opt/spin/app
  register: result
  changed_when: '"Installing" in result.stdout'
  notify: Restart spin

- name: 'Set SPIN_CA_DIR environment variable'
  lineinfile: >
    line='SPIN_CA_DIR=/opt/spin/ca' dest=/etc/environment
    regexp='^SPIN_CA_DIR=.*' state=present

- name: 'Initialize CA certificate'
  shell: >
    /opt/spin/rbenv/bin/rbenv exec bundle exec bin/api-ca init --cn '{{ service_hostname }} {{ environment_string }} API Client CA'
    chdir=/opt/spin/app
    creates=/opt/spin/ca/ca.crt
  environment:
    SPIN_CA_DIR: /opt/spin/ca

- name: 'Rehash rbenv'
  command: /opt/spin/rbenv/bin/rbenv rehash
  when: result | changed

- name: 'Generate passwords'
  set_fact:
    app_db_password: "{{ lookup('password', '../passwords/app_db_password chars=letters,digits length=64') }}"
    secret_key_base: "{{ lookup('password', '../passwords/secret_key_base chars=letters,digits length=128') }}"
    login_jwt_secret: "{{ lookup('password', '../passwords/login_jwt_secret chars=letters,digits length=128') }}"

- name: 'Install SPIN configuration'
  template:
    src: templates/app/{{ item }}.j2
    dest: /opt/spin/app/config/{{ item }}
    owner: root
    group: spin
    mode: 0640
  with_items:
    - spin_service.yml
    - rapidconnect.yml
  notify: Restart spin

- name: 'Install site configuration'
  copy:
    src: assets/app/{{ item }}
    dest: /opt/spin/app/config/{{ item }}
    owner: root
    group: spin
    mode: 0640
  with_items:
    - consent.md
    - welcome.md
    - support.md
    - new_invitation_body.md
  notify: Restart spin

- name: 'Install site branding'
  copy:
    src: assets/app/{{ item }}
    dest: /opt/spin/app/app/assets/images/{{ item }}
    owner: root
    group: spin
    mode: 0644
  with_items:
    - logo.png
    - email_branding.png
    - favicon.png
  notify: Restart spin

- name: 'Create database user'
  mysql_user:
    name: '{{ db.username }}'
    password: '{{ app_db_password }}'
    priv: '{{ db.name }}.*:ALL'
    login_unix_socket: /var/lib/mysql/mysql.sock
    state: present

- name: 'Install SPIN systemd unit'
  template:
    src: templates/app/spin.service.j2
    dest: /lib/systemd/system/spin.service
    owner: root
    group: root
    mode: 0600

- meta: flush_handers

- name: 'Enable SPIN service'
  service:
    name: spin
    state: started
    enabled: yes
